continue
range_params
continue
params.permit()continue
params.permit()
range_params
params
continue
interval_params
interval_params[:interval]
continue
@posts.select(:title).inspect
@posts.select(:title)
continue
@posts.select(:title)continue
@posts.select(:title)
@posts.inspect
@posts
posts
continue
ActionController::Parameters.new(JSON.parse(params[:range],:symbolize_names => true)).permit(:begin, :end)
params[:range]
continue
params
par
my_params
continue
my_params.permit(:scale, :units)
continue
my_params.require(:range,:timeFrame)
my_params.require(:timeFrame)
my_params.permit(:timeFrame)
my_params
continue
my_params.permit(:timeFrame)continue
my_params
my_params.permit(:timeFrame)
my_params.require(:timeFrame)
my_params[:timeFrame]
my_params[:timeFrame].permit(:scale)
my_params[:timeFrame]
my_params.timeFrame
my_params
continue
my_paramscontinue
my_params
Hash[jp].permit()
Hash[jp]
Hash[sub]
sub
(JSON.parse params[:data]).gsub('=>', ':')
JSON.parse params[:data].gsub('=>', ':')
JSON.parse params[:data].gsub(':', '=>')
JSON.parse params[:data].gsub('=>', ':')
sub
jp
oring
continue
(JSON.parse params[:data]).gsub('=>', ':')
JSON.parse params[:data].gsub('=>', ':')
JSON.parse hash_as_string.gsub('=>', ':')
Hash(params[:data])
Hash(params[:data]
JSON.parse(params[:data])
JSON.parse(params[:data],:symbolize_names => true).permit()
JSON.parse(params[:data],:symbolize_names => true)
JSON.parse(s,:symbolize_names => true)
my_params
my_params.permit(:timeFrame, :range)
my_params.permit(:timeFrame, :range).permit(:scale, :units, :begin, :end)
my_params
continue
my_params.permit(:timeFrame)continue
my_params
params
my_params.permit(:timeFrame)
my_params.require(:timeFrame).permit{'scale'}
my_params.require(:timeFrame).permit{:scale}
my_params.require(:timeFrame)
my_params.require(:timeFrame).permit{:scale}
my_params.require(:timeFrame)
my_params
my_params.permit(:timeFrame)
my_params.permit(:timeFrame}
my_params.permit(:timeFrame]
my_params.permit(:timeFrame, :range).permit(:scale, :units, :begin, :end)
continue
my_params
continue
my_params
continue
params
JSON.parse(params)
ActionController::Parameters.new(JSON.parse(params))
continue
my_params_2.require(:timeFrame).permit(:scale, :units)
my_params_2.require(:timeFrame)
my_para
my_params_2.permit(:timeFrame)
continue
my_params_2.permit(:timeFrame)
my_params_2.permit()
my_params_2
dh
my_params
dh
continue
})continue
  }
    role: 'admin'
    age:  22,
    name: 'Francesco',
  person: {
params = ActionController::Parameters.new({
my_params
JSON.parse(my_params)
my_params.yo_yaml
my_params.inspect
my_params.type
type(my_params)
Hash[my_params.split(",").collect{|x| x.strip.split("=>")}].parmit(:timeFrame)
Hash[my_params.split(",").collect{|x| x.strip.split("=>")}].timeFrame
Hash[my_params.split(",").collect{|x| x.strip.split("=>")}]
my_params.hashFormat()
my_params.hash()
my_params.hash())
hash(my_params)
my_params[4]
my_params[3]
my_params[2]
my_params[1]
my_params.timeFrame
my_params
continue
headers
continue
headers
params.require(:timeFrame ||headers :range)
params.require(:timeFrame || :range)
continue
params.require(:timeFrame || :range)
params.require(:months || :range)
params
JSON.parse(params)
JSON.parse(params[])
JSON.parse(params[:timeFrame])
json(params[:timeFrame])
json(params:timeFrame)
continue
params.require(:months || :range)
params.require(:months)
params
continue
params
continue
list
headers
continue
params
continue
params
continue
params
continue
params[:limit]
continue
params
continue
params[:limit].months
params[:limit]
continue
@posts
continue
@posts
continue
@posts
continue
@posts
continue
@goTo
@goto
continue
@posts
continue
@posts
